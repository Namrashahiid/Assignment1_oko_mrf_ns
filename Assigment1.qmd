---
title: "Assignment (Data and Descriptive)"
editor: visual
author: Namra Shahid & Marit Rygg Fredheim
csl: apa-no-ampersand.csl
format: 
  html: 
    code-fold: true
---

# Assignment 1

## Introduction:

In this assignment we are going to Calculate GDP per capita for 8 subset of countries sub-regional (NUTS3).
We are group two and will therefore examine these countries:

-   Ireland (IE)

-   Poland (PL)

-   Spain (ES)

-   Slovania (SI)

-   Netherlands (NL)

-   Greece (EL)

-   Norway (NO)

-   Albania (AL)

## Data:

The main purpose to study this dataset from Eurostat is to analyse regional inequality.
To do so we have to use GDP (Gross Domestic Product), at the market and population data by NUTS 3 regions.

## Sub-national GDP

```{r, echo = FALSE}
library(tidyverse)
library(vtable)
library(dineq)
library(dplyr)
library(magrittr)
library(readr)
library(rio)
```

Files "Nama_10r_3gdp.csv" and "demo_r\_pjanaggr3.csv" are different dataset.
We will work with these two dataset throghout this assignment.

When it comes to what these dataset contains, it is data for GDP on nuts 3 level for different countries.
We find different data in the columns of the dataset of "Nama_10r_3gdp.csv".
This dataset contains data on Nuts 3 level.

We are also using dataset: "Demo_r\_pjanaggr3.csv".
This dataset contains data for population data on Nuts 3 level.

```{r}
#Import data from Eurostat
gdpfile <- import("nama_10r_3gdp.csv")
popfile <- import("demo_r_pjanaggr3.csv")

#Clean data 
gdpfile %<>% select(unit, geo, TIME_PERIOD, OBS_VALUE)
popfile %<>% select(unit, geo, TIME_PERIOD, OBS_VALUE)

# Filter for the countries we are going to study and change variablenames
gdpdata <- filter(gdpfile,unit == "MIO_EUR" & (grepl('IE...', geo) | grepl('PL...', geo) | grepl('ES...', geo) | grepl('SI...', geo) | grepl('NL...', geo) | grepl('ES...', geo) | grepl('NO...', geo) | grepl('AL...', geo))) %>%
  mutate(gdp_n3 = OBS_VALUE, year = TIME_PERIOD, id_nuts3 = geo) %>%
  select(gdp_n3, year, id_nuts3)

# Filter for gdp per capita
popdata <- filter(popfile,unit == "NR") %>% 
  mutate(pop = OBS_VALUE, year = TIME_PERIOD, id_nuts3 = geo) %>%
  select(pop, year, id_nuts3)

#Generate main data frame
tmp <- merge(popdata, gdpdata, by = c("year", "id_nuts3"))

#Gen Nuts 2 id
tmp %<>%
  mutate(id_nuts2 = substr(id_nuts3,1,4))

#Gen Nuts 1 id
tmp %<>%
  mutate(id_nuts0 = substr(id_nuts3,1,2))
```

### GDP per capita calculation:

Like mentioned in this assignment we will use GDP per capita and which is based on population by NUTS.

One important thing to come up here with is that, we calculate GDP per capita by using this formula:

![](images/paste-1EADC664.png){width="253"}

We are here calcualting GDP per capita:

Statistically explained:

**y*i* = GDP*i*/ population*i***

```{r}
# Calculate GDP per capita
tmp %<>%
  mutate(GDP_capita = (gdp_n3 * 1000000)/pop)
```

```{r}
tmp_gdpcapita <- tmp %>%
  select(year, id_nuts3, pop, GDP_capita)
#na.omit(tmp_gdpcapita)
```

### Describe the data (GDP per capita) using the meta data description from Eurostat:

What we can describe out from our data (GDP per capita) using meta data description is that the GDP measures the value of total final output.
Now the question is how does GDP per capita calculated?
To answer this, we can look at the formula over.

Metadata can be defined as information that is needed to be able to use and intercepted statistics.
Main function of metadata is to explain data by giving definition of for example according to our data, region, year, GDP, population, GDP capita.

We have now information of GDP per capita of different regions.

```{r}
# Report the essential descriptive statistics 
# for you data set (Mean, Min, Max,..:)
tmp %>% 
  filter(year == 2010) %>%
  select(id_nuts3, pop, GDP_capita) %>% 
  # . to stop RStudio complaining about no data
  st()
```

When we look at this table we can see is: deceptive statistics of data, we see data of different regions.

When we see the Summay statistics, we can see different type of data, which is first of all: Variables such as: year, pop, GDP_capita.
After that we find N Mean.
When we look at the difference between the statistics such as Max and Min, and if we compare both variables, there is no such major difference between the numbers.
This is quite sensible.

```{r}
tmp %>%  distinct(id_nuts0, year,.keep_all=TRUE) %>% 
  ggplot(aes(x = year, y = GDP_capita, fill = id_nuts0, color = id_nuts0)) +
  geom_line(lwd = .8) +
   labs(x = "Year", y = "GDP per capita")
```

***Graph: 1***

When we look at graph 1, we can see that Norway´s GDP are on the top (the blue line on top).
Norway have the highest GDP per capita.
Albania on the other side have the lowest GDP per capita.
Orange line is refering Albania´s GDP per capita.
If we compare Norway´s GDP with Albania´s.
There is huge difference there, because Norway is on the top and Albania on the other side at it´s lowest.

If we specify the GDP per capita for Norway line (blue line), we can see that it started pretty nice in around 2006, but then suddenly we can see it kind of like had decline in GDP per capita.
The reason behind this most probably because of the financial crisis, which affected the society in years 2008-2009.
Suddenly if we see GDP per capita started raising from 2009 again, and had its small fall downs in around 2015, and it raised again.

In the middle the lined are showing the other countries.

```{r}
tmp_1 <- tmp %>% 
  filter(year == 2010) %>%  select(GDP_capita, id_nuts3) %>% 
  slice_min(GDP_capita, n = 10) %>%  select(id_nuts3)

tmp %>%   
  filter(id_nuts3 %in% tmp_1 $ id_nuts3) %>% 
  ggplot(aes(x = year, y = GDP_capita, fill = id_nuts3, color = id_nuts3)) +
  geom_line(lwd = .8) +
   labs(x = "Year", y = "GDP per capita")
```

***Graph 2:***

Here we can see the GDP per capita for polish regions.
If we look at the orange line, which refers to PL214, we see that it had its down period to start with.
Not only (PL214) the orange line, but also all the other regions, does not start good.
PL214 (the orange line) had it´s real rise after 2010.
PL214 had its down time between years 2008-2009, most probably because of the financial crisis, which caused chaos in the whole world.

```{r}
tmp_1 <- tmp %>% 
  filter(year==2010) %>%  
  select(GDP_capita, id_nuts3)  %>% 
  slice_max(GDP_capita, n = 10) %>%  
  select(id_nuts3)

tmp %>%   
  filter(id_nuts3 %in% tmp_1$id_nuts3) %>% 
  ggplot(aes(x = year, y = GDP_capita, fill = id_nuts3, color = id_nuts3)) +
  geom_line(lwd = .8) +
   labs(x = "Year", y = "GDP per capita")
```

***Graph 3:***

Regional per capita for highest income reason for 10 regions.
9 of them are regions from the Netherlands which starts with NL\*\*\* and the last one refers to Norway NO071.
We can see here that region in Netherlands NL113 (the orange line) shows us that it´s on the top.
of all other regions in Netherlands and surprisingly Norway NO071 (the pink line).

## Individual country cases

With this GDP per capita for specific countries we can filter our information/data easily afterwards in this assignment.
This can for example be done by finding the wealthiest and not wealthiest regions.

### GDP per capita for Norway:

```{r}
tmp %>%
  filter(id_nuts0 == "NO" , year == 2010) %>%
  select(gdp_n3, pop, GDP_capita) %>%
  st()
```

When we look at the GDP per capita for Norway, we can see that there is no such big difference between the values under summary statistics.
Such as Min and Max, Mean, Std.
Dev, Pctl values in summary statistics are exactly the same.
The reason behind this is that N value is 1.
When N is 1, than it makes sense why all these values are same.

### GDP per capita for Spain:

3 Wealthiest regions in Spain:

```{r}
tmp %>%
  filter(id_nuts0 == "ES" , year == 2010) %>%
  select(id_nuts3, GDP_capita) %>%
  slice_max(GDP_capita, n = 3)
```

***Table 1:***

When we look at this GDP per capita formula, we find 3 wealthiest regions in Spain.
When we find GDP per capita for regions, we specify and go more in the depth of the GDP per capita research.
What we see in table 1 is that the GDP per capita for ES211 (the first region) and ES300 (the second region and ES212 (the third region).
This table shows us the wealthiest regions in Spain.
There is no such big difference in them.
We can say that there is no outliers in the dataset of the regions in Spain, because the observation between these regions are somehow consistent.
If we look at our next table 2, we can see the least wealthiest regions in Spain.

3 least wealthiest region in Spain

```{r}
tmp %>%
  filter(id_nuts0 == "ES" , year == 2010) %>%
  select(id_nuts3, GDP_capita) %>%
  slice_min(GDP_capita, n = 3)
```

***Table 2:***

When we look at this table 2, we can see the least wealthiest regions in Spain.
Comparing GDP per capita from Table 2 with Table 1 we can see that there is difference between values in both tables.

### GDP per capita for Poland:

Wealthiest regions in Poland:

```{r}
tmp %>%
  filter(id_nuts0 == "PL" , year == 2010) %>%
  select(id_nuts3, GDP_capita) %>%
  slice_max(GDP_capita, n = 3)
```

***Table 3:***

When we look at table 3 we see the wealthiest regions in Poland.
In comparison with the wealthiest regions in Spain, there is somehow difference between the GDP per capita for the wealthiest regions in Poland and Spain.
Next we are going to see the GDP per capita for the least wealthiest regions in Poland.

Least wealthiest regions in Poland:

```{r}
tmp %>%
  filter(id_nuts0 == "PL" , year == 2010) %>%
  select(id_nuts3, GDP_capita) %>%
  slice_min(GDP_capita, n = 3)
```

***Table: 4***

We can see here the least wealthiest regions in Poland.
We can see that there is big difference between the wealthiest regions from table 3 and table table 4 (least wealthiest regions) in Poland.
We can see that least wealthiest regions have GDP per capita approximately the same.

## Regional inequity measures

When we talk about regional inequity measures its normal to talk about GINWj.
i tell us the about NUTS3 regions.
j tells us NUTS 2 regions.
i and j specify region data for us.
GINWj/i data shows us different sizes of regions etc.

```{r}
#gen weighted gini
#for all
gini.wtd(tmp$GDP_capita, w = tmp$pop)

tmp  %<>% 
  group_by(id_nuts2, year) %>% 
  mutate(gini_n2 = gini.wtd(GDP_capita, w = pop)) %>%
  ungroup() # to remove grouping
```

## Descriptive statistics Gini

### Cross country perspective

```{r}
tmp %>% 
  filter(year == 2010) %>%  
  distinct(id_nuts2, year,.keep_all = TRUE) %>%  
  select(gini_n2) %>%  
  st()
```

The data over tell us summary statistics.

We can see that our N variables are 44 in quantity.

Mean is 0, which is a little weird, it´s maybe because one of the regions have 0 as value as GINI value .
On the other side Max value is 0.199 which is quite sensible.

```{r}
tmp %>%
  filter(id_nuts0 == "ES")  %>% 
  distinct(id_nuts2, year,.keep_all = TRUE) %>% 
  ggplot(aes(x = year, y = gini_n2, fill = id_nuts2, color = id_nuts2)) +
  geom_point(lwd = .8) +
   labs(x = "Year", y = "Gini")
```

***Graph: 4***

In Graph 4 here we can see descriptive data for Spain.
If we take a look at the green dots on top, we can see that it started pretty good at start, than had its fell down in around 2008-2009.
ES30 is the wealthiest of all others.
If w take a look at last dots, which are pink dots flat on the 0 line on the x-axis.
The reason behind this most probably because of one of the values on GINW formula or N is 0.

## Outlier discussion

When we talk about Outlier discussion part its normal to define the word outlier.
The definition of this word is when a value or an observation is distant from other observation, that is to say, a data point that differs significantly from other data points.

```{r}
ggplot(tmp, aes(x = id_nuts0, y = gini_n2)) +
  geom_point()
```

***Graph: 5***

## Discuss briefly if there are noteworthy outliers:

An important thing to come up here is that an outlier is a value or an observation that is distant from another observations, that is to say, a data point that differs significantly from other observations like mentioned earlier.

When we take a look at some kind of noteworthy outliers between these countries, we can take a look at the graph 5.
We can point out here that Ireland (IE) have some weird appearance in this graph.
We can see that somehow some outliers emerge for Ireland.
It start with a point, than suddenly have a big gap before the Gini starts raising again.
Than the gap continues and suddenly gini is back.

# Assignment 2

In last assignment (Assignment 1) we focused on GDP per capita and different types of graphs and tables.

In this assignment are we going to have our main focus on countries we have focused on in the first assignment

In this assignment we will show the data that was presented in the last assignment.

So the first task in this assignment is to estimate the effete of regional development yi on regional inequality GINIWj for the year 2010.Growth and inequity.

One important thing to point out here is that the Gini coefficient has a value between 0 and 1.
When the value is equal to 0 or close enough to 0, then this shows us that the model is not that suitable or fit to analyze.

"Estimate the effete of regional development yj on regional inequality GINIWj for the year 2010"

```{r}
#Regenerate gdp per capita for nuts 2 
gdp_pc_n2 <- tmp %>%
  select(year, pop, gdp_n3, id_nuts2) %>% 
  mutate(GDP_capita_n2 = (gdp_n3 * 1000000)/pop) %>%
  select(year, id_nuts2, GDP_capita_n2)
```

What we have done in this formula up, so that we have regenerated the formula, so that we can get the right values for our next steps.

......Now when we take a look at the Summary Statistics, we can see that some values are 0.
For example in this case we find that Min and Pctl.
25 are equal to 0.
As we mentioned earlier, the values are always between 0 and 1, and when the value is equal to 0 or close enough to 0, then this designate that the model/variable which we are working on is not that useful to analyze.

On the other hand we can see that, there is max, mean Std.Dev value that are not 0, but very close to zero on the first line.

Now the question is, whats the solution to those values of 0.
One important thing here to point out is that the reason behind that the values are equal to zero can be because of maybe there are some data/values that are lost or not there for this specific year which we have chosen.

Now in this formel/code are we generating new data set.
We are here generating new dataflies, which is related to education and transportation (vehicles) this time.

```{r}
tmp %>%
  filter(id_nuts0 == "ES" , year == 2010) %>%
  select(id_nuts3, GDP_capita) 
```

kommetar

## Other determinants of inequity

"Download from Eurostat for you subset of countries regional (NUTS2, j ) data related to transport infrastructure, education and demographics. Select on variable per category that you would like to explore further in there relationship to regional inequality GINIWj."

```{r}
#Import data from Eurostat
infrafile <- import("tran_r_vehst.csv")
demofile <- import("demo_r_pjangroup.csv")
edufile <- import("edat_lfse_16.csv")


#Clean data 
infrafile %<>% select(vehicle, unit, geo, TIME_PERIOD, OBS_VALUE)
demofile %<>% select(unit, sex, age, geo, TIME_PERIOD, OBS_VALUE)
edufile %<>% select(unit, sex, age, geo, TIME_PERIOD, OBS_VALUE)


# Filter for the countries we are going to study and change variablenames
infradata <- filter(infrafile, unit == "NR") %>%
  mutate(gdp_n3 = OBS_VALUE, year = TIME_PERIOD, id_nuts3 = geo) %>%
  select(gdp_n3, year, id_nuts3)

# Filter for gdp per capita
demodata <- filter(demofile,unit == "NR") %>% 
  mutate(pop = OBS_VALUE, year = TIME_PERIOD, id_nuts3 = geo) %>%
  select(pop, year, id_nuts3)

# Filter for gdp per capita
edudata <- filter(edufile,unit == "PC") %>% 
 mutate(pop = OBS_VALUE, year = TIME_PERIOD, id_nuts3 = geo) %>%
 select(pop, year, id_nuts3)

#Koden funka til hit ---- 

# & (grepl('IE...', geo) | grepl('PL...', geo) | grepl('ES...', geo) | grepl('SI...', geo) | grepl('NL...', geo) | grepl('ES...', geo) | grepl('NO...', geo) | grepl('AL...', geo))) 

#Generate main data frame
#tmp_ass2 <- merge(infradata, demodata, edudata, by = c("year", "id_nuts3", ))

#Gen Nuts 2 id
#tmp_ass2 %<>%
 # mutate(id_nuts2 = substr(id_nuts3,1,4))

#Gen Nuts 1 id
#tmp_ass2 %<>%
 # mutate(id_nuts0 = substr(id_nuts3,1,2))
```

"Estimate a multiple linear regression model with you new variables for 2010 and give a small interpretation of your findings."

#### Appendix

Feks.
eventuelle tabeller som me ikkje vil ha lenger oppe.

#### References

::: {#refs}
:::

#### Footnotes (visst me trenge det)

#### 
